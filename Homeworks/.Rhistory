knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(nycflights13)
library(nycflights13)
library(nycflights13)
library(tidyverse)
library(nycflights13)
data(flights)
force(flights)
dep_delay_filt = filter(flights, carrier %in% c("AA", "DL", "UA"), dest %in% c("ATL","ORD","LAX"))
ggplot(data = dep_delay_filt, mapping = aes(x = carrier, y = dep_delay), fill = carrier)+
geom_violin(show.legend = FALSE)+
cpprd_flip()+
facet_grid(rows = vars(carrier))
dep_delay_filt = filter(flights, carrier %in% c("AA", "DL", "UA"), dest %in% c("ATL","ORD","LAX"))
ggplot(data = dep_delay_filt, mapping = aes(x = carrier, y = dep_delay), fill = carrier)+
geom_violin(show.legend = FALSE)+
coord_flip()+
facet_grid(rows = vars(carrier))
dep_delay_filt = filter(flights, carrier %in% c("AA", "DL", "UA"), dest %in% c("ATL","ORD","LAX"))
ggplot(data = dep_delay_filt, mapping = aes(y = dep_delay), fill = carrier)+
geom_violin(show.legend = FALSE)+
coord_flip()+
facet_grid(rows = vars(carrier))
dep_delay_filt = filter(flights, carrier %in% c("AA", "DL", "UA"), dest %in% c("ATL","ORD","LAX"))
ggplot(data = dep_delay_filt, mapping = aes(x = carrier, y = dep_delay), fill = carrier)+
geom_violin(show.legend = FALSE)+
coord_flip()+
facet_grid(rows = vars(carrier))
dep_delay_filt = filter(flights, carrier %in% c("AA", "DL", "UA"), dest %in% c("ATL","ORD","LAX"))
ggplot(data = dep_delay_filt, mapping = aes(x = carrier, y = dep_delay), fill = as.factor(carrier))+
geom_violin(show.legend = FALSE)+
coord_flip()+
facet_grid(rows = vars(carrier))
dep_delay_filt = filter(flights, carrier %in% c("AA", "DL", "UA"), dest %in% c("ATL","ORD","LAX"))
ggplot(data = dep_delay_filt, mapping = aes(x = carrier, y = dep_delay))+
geom_violin(show.legend = FALSE,  fill = carrier)+
coord_flip()+
facet_grid(rows = vars(carrier))
dep_delay_filt = filter(flights, carrier %in% c("AA", "DL", "UA"), dest %in% c("ATL","ORD","LAX"))
ggplot(data = dep_delay_filt, mapping = aes(x = carrier, y = dep_delay))+
geom_violin(show.legend = FALSE)+
coord_flip()+
facet_grid(rows = vars(carrier))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
data(faithful)
# Rename the variables so they're more intuitive and names actually make sense
faithful <- rename(faithful, duration = eruptions, interval = waiting)
#Location or central tendency (mean and median)
#Scale or spread (sd, range, and interquartile range)
#Symmetry
#Outliers
#Location Insight - Create a violin boxplot with quartile ranges like above for the duration and interval variables
mean_duration <-  mean(faithful$duration)
median_duration <- median(faithful$duration)
lower_hinge_duration <- quantile(faithful$duration, .25)
upper_hinge_duration <- quantile(faithful$duration, .75)
mean_interval <-  mean(faithful$interval)
median_interval <- median(faithful$interval)
lower_hinge_interval <-  quantile(faithful$interval, .25)
upper_hinge_interval <-  quantile(faithful$interval, .75)
#Plot for Duration Location
faithful %>%
ggplot(mapping = aes(x = factor(0), y = duration))+
geom_violin(fill = "lightblue")+
geom_hline(yintercept = mean_duration, color = "green")+
geom_hline(yintercept = median_duration, color = "black")+
geom_hline(yintercept = lower_hinge_duration, color = "red")+
geom_hline(yintercept = upper_hinge_duration, color = "red")+
geom_boxplot(fill = "grey", width = .075)+
coord_flip()+
labs(
x = "",
y = "Duration of Eruption (minutes)",
title = "Old Faithful Eruption Duration"
)
#Plot for Interval Length Location
faithful %>%
ggplot(mapping = aes(x = factor(0), y = interval))+
geom_violin(fill = "lightblue")+
geom_hline(yintercept = mean_interval, color = "green")+
geom_hline(yintercept = median_interval, color = "black")+
geom_hline(yintercept = lower_hinge_interval, color = "red")+
geom_hline(yintercept = upper_hinge_interval, color = "red")+
geom_boxplot(fill = "grey", width = .075)+
coord_flip()+
labs(
x = "",
y = "Interval Between Eruptions (minutes)",
title = "Old Faithful Interval Length Between Eruptions"
)
summary(faithful$duration)
summary(faithful$interval)
summary(faithful$duration)
summary(faithful$interval)
data(faithful)
# Rename the variables so they're more intuitive and names actually make sense
faithful <- rename(faithful, duration = eruptions, interval = waiting)
#Location or central tendency (mean and median)
#Scale or spread (sd, range, and interquartile range)
#Symmetry
#Outliers
#Location Insight - Create a violin boxplot with quartile ranges like above for the duration and interval variables
mean_duration <-  mean(faithful$duration)
median_duration <- median(faithful$duration)
lower_hinge_duration <- quantile(faithful$duration, .25)
upper_hinge_duration <- quantile(faithful$duration, .75)
mean_interval <-  mean(faithful$interval)
median_interval <- median(faithful$interval)
lower_hinge_interval <-  quantile(faithful$interval, .25)
upper_hinge_interval <-  quantile(faithful$interval, .75)
#Plot for Duration Location
faithful %>%
ggplot(mapping = aes(x = factor(0), y = duration))+
geom_violin(fill = "lightblue")+
geom_hline(yintercept = mean_duration, color = "green")+
geom_hline(yintercept = median_duration, color = "black")+
geom_hline(yintercept = lower_hinge_duration, color = "red")+
geom_hline(yintercept = upper_hinge_duration, color = "red")+
geom_boxplot(fill = "grey", width = .075)+
coord_flip()+
labs(
x = "",
y = "Duration of Eruption (minutes)",
title = "Old Faithful Eruption Duration"
)
#Plot for Interval Length Location
faithful %>%
ggplot(mapping = aes(x = factor(0), y = interval))+
geom_violin(fill = "lightblue")+
geom_hline(yintercept = mean_interval, color = "green")+
geom_hline(yintercept = median_interval, color = "black")+
geom_hline(yintercept = lower_hinge_interval, color = "red")+
geom_hline(yintercept = upper_hinge_interval, color = "red")+
geom_boxplot(fill = "grey", width = .075)+
coord_flip()+
labs(
x = "",
y = "Interval Between Eruptions (minutes)",
title = "Old Faithful Interval Length Between Eruptions"
)
